import Echo from 'laravel-echo'
import Pusher from 'pusher-js'
import { createToastInterface } from 'vue-toastification'
import axios from 'axios'
window.axios = axios

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Echo
window.Pusher = Pusher
window.Echo = new Echo({
    broadcaster: 'pusher',
    key: 'local',
    cluster: 'mt1', // –∑–∞–≥–ª—É—à–∫–∞
    wsHost: window.location.hostname,
    wsPort: 8085,
    forceTLS: false,
    encrypted: false,
    disableStats: true,
    enabledTransports: ['ws'],
})

// // –ì–ª–æ–±–∞–ª—å–Ω—ã–π toast
const toast = createToastInterface()

export default function EchoGlobal(currentUser) {
    if (!currentUser) {
        console.warn('EchoGlobal: currentUser –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω!');
        return;
    }

    if (!window._echoSubscribed) {
        window.Echo.channel('notifications')
            .listen('.TicketCreated', (e) => {
                if (e.ticket.last_message.user_id !== currentUser.id) {
                    toast.success(`üì¨ –ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è #${e.ticket.user.name}`, {
                        timeout: 6000,
                    });
                }
            })
            .listen('.TicketMessageAdded', (e) => {
                const msg = e.message;
                const isMessageFromOther = msg.user_id !== currentUser.id;

                if (isMessageFromOther && currentUser.is_parent) {
                    const isFromAdmin = msg.is_admin === true;

                    const sender = isFromAdmin
                        ? '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —à–∫–æ–ª—ã'
                        : `–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è #${msg.user?.name || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`;

                    toast.success(`üì¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${sender}`, {
                        timeout: 6000,
                    });
                }
            })
            .listen('.NewCertificateRequest', (e) => {
                 if (currentUser?.is_admin) {
                    toast.success(`üì¨ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–ø—Ä–∞–≤–∫—É –¥–ª—è —É—á–µ–Ω–∏–∫–∞ #${e.certificate.child.name}`, {
                        timeout: 6000,
                    })
                }
            })
            .listen('.NewPersonalAffairRequest', (e) => {
                if (currentUser?.is_admin) {

                    toast.success(`üì¨ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏—á–Ω–æ–≥–æ –¥–µ–ª–∞ —É—á–µ–Ω–∏–∫–∞ #${e.personalAffair.child.name}`, {
                        timeout: 6000,
                    })
                }
            })
            .listen('.NewActivateStudentAccount', (e) => {
                if (currentUser?.is_admin) {
                    toast.success(`üì¨ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ —É—á–µ–Ω–∏–∫–∞#${e.activateAccount[0].child.name}`, {
                        timeout: 6000,
                    })
                }
            })
        window._echoSubscribed = true;
    }
}
